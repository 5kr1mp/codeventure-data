{
  "users": [
    {
      "id": "1",
      "username": "Admin",
      "user courses": [
        {
          "course name": "Programming Fundamentals I",
          "progress": {
            "activities completed": 0,
            "quiz score": 0
          }
        }
      ]
    }
  ],
  "courses": [
    {
      "id": "1",
      "name": "Programming Fundamentals I",
      "desc": "Start your coding journey by learning about the fundamentals with the Java programming language.",
      "activities": [
        {
          "type": 0,
          "activity name": "\"Hello World!\"",
          "text": "<h2>Welcome to the world of programming!</h2><p>Programming, or coding, is the process of writing code, or sequences of instructions that a computer will follow. These sequences of codes and instructions are also called <strong><i>programs</i></strong> and are used for many things, such as searching for information, buying items online, calculating, and more.</p><p>In this course, we are going to learn about the fundamentals of programming to kickstart your journey on the <strong><i>World of Programming</i></strong></p><p>To start, we are going to display a <i>\"Hello World\"</i> message. Displaying a text or message on the screen or console is one of the most fundamental functions in programming. Using the Java Programming Language, this can be done using the code:</p> <div class='code'><div class='line'></div><p>System.out.println(\"Your Message\");</p></div><p><i>Note: As a beginner, you do not have to worry about what each part of the code means. They will be explained later.</i></p><p>This code will <i>print</i> or display the given text between the open and close parenthesis '( )', as long as the text is between two double quotes (\" \"). Texts in programming languages are usually enclosed in double quotes to differentiate pieces of code from text data, also called <strong>String</strong> data.</p>",
          "instructions": "Now, it's your turn to write code. Simply tap the pieces of code within the choices box and rearrange the given code to display a \"Hello World!\" message.",
          "answer box": [
            [
              {
                "type": 1,
                "data": 0
              },
              {
                "type": 0,
                "text": "out."
              },
              {
                "type": 0,
                "text": "println("
              },
              {
                "type": 1,
                "data": 1
              },
              {
                "type": 0,
                "text": ");"
              }
            ]
          ],
          "choices": [
            {
              "text": "\"Hello World\"",
              "data": 1
            },
            {
              "text": "System.",
              "data": 0
            },
            {
              "text": "system.",
              "data": 2
            },
            {
              "text": "Hello World",
              "data": 2
            }
          ]
        },
        {
          "type": 0,
          "activity name": "Storing Data",
          "text": "<h2>Storing Data with Variables</h2><p>Storing data is one of the fundamentals of programming and can be done by creating <strong><i>variables</i></strong>.Using variables, you can access its stored data for as many times as you want just by calling the name of the variable.</p><p>Here is an example of a variable that stores a String data:</p><div class='code'><div class='line'></div><p>String myMessage = \"Hello!\";</p></div><p>The code above can be broken down into 4 parts: </p><ul><li><strong>String</strong> - This is refers to the type of data that a variable can store. There are many data types including <strong>String</strong> for texts, <strong>int</strong> for whole numbers, and <strong>boolean</strong> for true or false values, to name a few. Data types are also case sensitive, all primitive data types excluding <strong>String</strong> starts with lower case letters. </li><li><strong>myMessage</strong> - This is the name of the variable, also called the <i>identifier</i>. Whenever you need to get the data of a variable, you only need to write the variable name or identifier. Identifiers can only contain the letters a-z and the numbers 0-9 as long as it does not start with a number.</li><li><strong>=</strong> - This is the assignment operator. This will assign the data (right side of the operator) to the variable (left side of the operator).</li><li><strong>\"Hello!\"</strong> - This is the data to be stored in the variable. The data should correspond to the declared data type of the variable. In this case, the variable <strong>myMessage</strong> can only take and store <strong>String</strong> values and data. <i>(Remember that <strong>String</strong> values should be enclosed between two double quotes.)</i></li></ul><p>If you want to display the variable, simply recall the <strong>println()</strong> statement and put the variable name between the parenthesis</p><div class='code'><div class='line'></div>System.out.println(myMessage);</div>",
          "instructions": "For this activity, create a variable with an <strong>int</strong> data type which stores the data 10, and use the <strong>println()</strong> statement to display the variable",
          "answer box": [
            [
              {
                "type": 1,
                "data": 0
              },
              {
                "type": 0,
                "text": " myNum = "
              },
              {
                "type": 1,
                "data": 1
              },
              {
                "type": 0,
                "text": ";"
              }
            ],
            [
              {
                "type": 0,
                "text": "System.out.println("
              },
              {
                "type": 1,
                "data": 2
              },
              {
                "type": 0,
                "text": ");"
              }
            ]
          ],
          "choices": [
            {
              "text": "10",
              "data": 1
            },
            {
              "text": "String",
              "data": 3
            },
            {
              "text": "myNum",
              "data": 2
            },
            {
              "text": "int",
              "data": 0
            },
            {
              "text": "\"myNum\"",
              "data": 3
            }
          ]
        },
        {
          "type": 0,
          "activity name": "Data Types",
          "text": "<h2>Data Types</h2><p>There are different types of data in the computer world. There are texts, numbers, single characters and more. Differentiating data by type allows the computer to know what operations can be done on the data. For example, with <strong>int</strong> data types, you can use math operators like addition and multiplication, but with <strong>String</strong> data types, you can't.</p><p>In Java, the most common data types are the following:</p><ul><li><p><strong>String</strong> - These are texts or 'strings of characters'. <strong>String</strong> data types should be enclosed between double quotes (\" \"). In the Java programming language, the <strong>String</strong> data type strictly starts with a capital letter and will not recognize the word <strong>string</strong> as a data type.</p> <div class='code'><div class='line'></div>String myVar = \"This is a text\";</div></li><li><p><strong>int</strong> - This represents integers and whole real numbers. You can use math operations on <strong>int</strong> data types.</p><div class='code'><div class='line'></div>int myNum = 10;</div></li><li><p><strong>double</strong> - Represents real numbers with decimal. You can also use math operators on <strong>double</strong> data types, but will always return a data type of <strong>double</strong>. This means that the result of math operations done on <strong>double</strong> will also be of type <strong>double</strong>.</p><div class='code'><div class='line'></div>double myDouble = 3.14;</div></li><li><p><strong>char</strong> - These are single digits and characters. Similar to <strong>String</strong>, these are enclosed between two single quotes.</p><div class='code'><div class='line'></div>char myChar = 'a';</div></li><li><p><strong>boolean</strong> - This can either be true or false.</p><div class='code'><div class='line'></div>boolean myBool = true;</div></li></ul>",
          "instructions": "For these activity, insert the corresponding data type or data within the example code",
          "answer box": [
            [
              {
                "type": 1,
                "data": 0
              },
              {
                "type": 0,
                "text": " myNum = 10;"
              }
            ],
            [
              {
                "type": 0,
                "text": "String myMessage = "
              },
              {
                "type": 1,
                "data": 1
              },
              {
                "type": 0,
                "text": ";"
              }
            ],
            [
              {
                "type": 1,
                "data": 2
              },
              {
                "type": 0,
                "text": " pi = 3.14;"
              }
            ],
            [
              {
                "type": 1,
                "data": 3
              },
              {
                "type": 0,
                "text": " myBool = false;"
              }
            ],
            [
              {
                "type": 0,
                "text": "char myChar = "
              },
              {
                "type": 1,
                "data": 4
              },
              {
                "type": 0,
                "text": ";"
              }
            ]
          ],
          "choices": [
            {
              "text": "'z'",
              "data": 4
            },
            {
              "text": "boolean",
              "data": 3
            },
            {
              "text": "double",
              "data": 2
            },
            {
              "text": "int",
              "data": 0
            },
            {
              "text": "\"Hello!\"",
              "data": 1
            }
          ]
        },
        {
          "type": 0,
          "activity name": "Math Operators",
          "text": "<h2>Operating on int and double data types</h2><p>Arithmetic operators refer to the specific symbols in programming that are used to perform mathematical operations including addition, subtraction, multiplication, and division. With the usage of Java arithmetic operators, you may perform mathematical operations on <strong>int</strong> and <strong>double</strong> values and variables.</p><p>As these are fundamental elements in any programming language, they are used in a ton of circumstances. For example, arithmetic operators can help to calculate the average of test scores, determining the speed of a moving object, or simply adding two integers. The primary arithmetic operators in Java are as follows: </p> <ul><li><p><strong>+</strong> : Used to add two values together. It is also used to concatenate or join two <strong>String</strong> values.</p><div class='code'><div class='line'></div>var1 + var2;</div></li> <li><p><strong>-</strong> : Used to subtract a value from another.</p><div class='code'><div class='line'></div>var1 - var2;</div></li> <li><p><strong>*</strong> : Used to multiply a value by another.</p><div class='code'><div class='line'></div>var1 * var2;</div></li> <li><p><strong>/</strong> : Used to divide a value by another.</p><div class='code'><div class='line'></div>var1 / var2;</div></li> <li><p><strong>%</strong> : Computes the remainder when dividing a value by another. It is most commonly called as the modulo operator.</p><div class='code'><div class='line'></div>var1 % var2;</div></li></ul>",
          "instructions": "For this activity, get the remainder when var1 is divided by var2 and save the result in a variable named 'result'.",
          "answer box": [
            [
              {
                "type": 0,
                "text": "int var1  = 10;"
              }
            ],
            [
              {
                "type": 0,
                "text": "int var2  = 3;"
              }
            ],
            [
              {
                "type": 0,
                "text": "int "
              },
              {
                "type": 1,
                "data": 0
              },
              {
                "type": 0,
                "text": " = "
              },
              {
                "type": 1,
                "data": 1
              },
              {
                "type": 1,
                "data": 2
              },
              {
                "type": 0,
                "text": "var2;"
              }
            ]
          ],
          "choices": [
            {
              "text": "%",
              "data": 2
            },
            {
              "text": "String",
              "data": 3
            },
            {
              "text": "var1",
              "data": 1
            },
            {
              "text": "result",
              "data": 0
            },
            {
              "text": "\"myNum\"",
              "data": 3
            }
          ]
        },
        {
          "type": 0,
          "activity name": "Conditionals",
          "text": "<h2>If-else statements</h2><p>Conditional statements allow computers to make decisions depending on conditions. With this, the computer can perform different actions making the program more dynamic.</p><p>The most common conditional statement is the <strong>if statement</strong>.</p><div class='code'><div class='line'></div><pre><p>if (<i>condition</i>) {</p><p>  System.out.println(\"Hello World!\");</p><p>}</p></pre></div></div><p>The <strong>if statement</strong> will only run the code between the curly braces, when the <i>condition</i> returns or equates to <i>true</i>. Within the parenthesis is the <i>condition</i> which usually compares values. The result of this comparison can either be true or false.</p><p><strong>Comparison operators</strong> may be used to compare two values: </p><ul><li><strong><</strong> - less than</li> <li><strong>></strong> - greater than</li> <li><strong>!=</strong> - not equal to; if you compare two equal values with this operator, the condition will return the boolean value <i>false</i> instead.</li> <li><strong>==</strong> - equal to</li> <li><strong><=</strong> - less than or equal to</li> <li><strong>>=</strong> - greater than or equal to</li></ul> <p>Whenever the condition equates to <i>false</i>, you can also execute a different block of code using an <strong>else statement</strong>. <div class='code'><div class='line'></div><pre><p>if (<i>condition</i>) {</p><p>  System.out.println(\"Hello World!\");</p><p>} else {</p><p>  System.out.println(\"Goodbye World\");</p><p>}</p></pre></div></div><p>In this case, \"Hello World!\" will be displayed if the <i>condition</i> is true, and \"Goodbye World\" if false.",
          "instructions": "Fill in the missing parts so the code will display \"Welcome!\" and not \"GoodBye!\"",
          "answer box": [
            [
              {
                "type": 0,
                "text": "int age = "
              },
              {
                "type": 1,
                "data": 0
              },
              {
                "type": 0,
                "text": ";"
              }
            ],
            [
              {
                "type": 0,
                "text": "if (age < 16) {"
              }
            ],
            [
              {
                "type": 0,
                "text": "&nbsp;&nbsp; System.out.println(\"GoodBye!\");"
              }
            ],
            [
              {
                "type": 0,
                "text": "} else {"
              }
            ],
            [
              {
                "type": 0,
                "text": "&nbsp;&nbsp; System.out.println(\"Welcome!\");"
              }
            ],
            [
              {
                "type": 0,
                "text": "}"
              }
            ]
          ],
          "choices": [
            {
              "text": "10",
              "data": 1
            },
            {
              "text": "15",
              "data": 3
            },
            {
              "text": "16",
              "data": 2
            },
            {
              "text": "17",
              "data": 0
            },
            {
              "text": "14",
              "data": 3
            }
          ]
        },
        {
          "type": 1,
          "activity name": "Quiz I",
          "questions": [
            "A data type that only accepts two possible values: true or false",
            "These statements allow computers to make decisions depending on conditions",
            "This data type consists of sequences or strings of letters",
            "This statement is used to print or display strings with a line break at the end",
            "This is used to store values",
            "This statement executes another block of code if the condition equates to false",
            "These operators allow mathematical operations",
            "This math operator will return the remainder of a value divided by another value",
            "These comparison operator means 'not equal to'",
            "This data type represents real numbers with decimal"
          ],
          "choices": [
            [
              "boolean",
              "int",
              "char"
            ],
            [
              "Logical Statements",
              "Conditional Operators",
              "Conditional Statements"
            ],
            [
              "char",
              "String",
              "string"
            ],
            [
              "Logical Statements",
              "System.out.println()",
              "Conditional Statements"
            ],
            [
              "variables",
              "condition",
              "data types"
            ],
            [
              "println() statement",
              "if statement",
              "else statement"
            ],
            [
              "Math Operators",
              "Assignment Operators",
              "Comparison Operators"
            ],
            [
              "addition",
              "modulo",
              "subtract"
            ],
            [
              "!=",
              "<=",
              "="
            ],
            [
              "int",
              "char",
              "double"
            ]
          ],
          "correct answers": [
            0,
            2,
            1,
            1,
            0,
            2,
            0,
            1,
            0,
            2
          ]
        }
      ]
    }
  ]
}
